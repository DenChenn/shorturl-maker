name: Build, Unit Testing, Versioning and Deploy

on:
  push:
    tags:
      - 'v*.*.*'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  RUN_REGION: asia-east1
  IMAGE_NAME: url-shortener-backend
  CLUSTER_NAME: dcard-gke-single-region
  CONFIG_MAP_NAME: backend-config
  POSTGRESQL_CLUSTER_IP: ${{ secrets.POSTGRESQL_CLUSTER_IP }}
  REDIS_CLUSTER_IP: ${{ secrets.REDIS_CLUSTER_IP }}

  # Env for backend server usage
  SQL_USER: ${{ secrets.SQL_USER}}
  SQL_PASSWORD:: ${{ secrets.SQL_PASSWORD }}
  DATABASE_NAME: postgres
  POSTGRESQL_IP: 127.0.0.1
  REDIS_IP: 127.0.0.1
  POSTGRESQL_PORT_NUMBER: 5432
  REDIS_PORT_NUMBER: 6379

jobs:
  build-backend-image:
    name: Build Docker Image
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set version into environment variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set MAJOR version into environment variable
        run: echo "MAJOR_VERSION=${ echo $RELEASE_VERSION|cut -c1-2}" >> $GITHUB_ENV

      - name: Replace dot in version into dash
        run: echo "RELEASE_VERSION_DASH=$(echo $RELEASE_VERSION | sed "s/\./-/g")" >> $GITHUB_ENV

      - name: Set up golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'

      - name: Build Image
        run: docker build -t asia.gcr.io/$PROJECT_ID/$MAJOR_VERSION/$IMAGE_NAME:$RELEASE_VERSION .

  google-service-auth:
    name: Finish GCP Authentication
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Google credential authentication
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud cli
        uses: google-github-actions/setup-gcloud@v0

      - name: Get gke credential
        run: gcloud container clusters get-credentials $CLUSTER_NAME --region $RUN_REGION --project $PROJECT_ID

  set-up-postgresql-server:
    name: Set up postgresql forwarding server
    needs: google-service-auth
    runs-on: ubuntu-latest
    steps:
      - name: Set up postgreSQL remote forwarding server
        run: kubectl port-forward $(kubectl get pod --selector="app=postgres" --output jsonpath='{.items[0].metadata.name}') $POSTGRESQL_PORT_NUMBER:$POSTGRESQL_PORT_NUMBER

  set-up-redis-server:
    name: Set up redis forwarding server
    needs: google-service-auth
    steps:
      - name: Set up redis remote forwarding server
        run: kubectl port-forward $(kubectl get pod --selector="pod=redis" --output jsonpath='{.items[0].metadata.name}') $REDIS_PORT_NUMBER:$REDIS_PORT_NUMBER

  set-up-backend-server:
    name: Set up backend server
    needs: [build-backend-image, set-up-redis-server, set-up-postgresql-server]
    steps:
      - name: Set up backend server
        run: docker run -dp 8080:8080 asia.gcr.io/$PROJECT_ID/$MAJOR_VERSION/$IMAGE_NAME:$RELEASE_VERSION

  run-success-unit-tests:
    name: Run success unit tests
    needs: set-up-backend-server
    runs-on: ubuntu-latest
    steps:
      - name: Start tesing
        run: go test -v ./test/success

  run-error-unit-tests:
    name: Run error unit tests
    needs: set-up-backend-server
    runs-on: ubuntu-latest
    steps:
      - name: Start tesing
        run: go test -v ./test/error

  run-cache-unit-tests:
    name: Run cache unit tests
    needs: set-up-backend-server
    runs-on: ubuntu-latest
    steps:
      - name: Start tesing
        run: go test -v ./test/cache

  deploy-to-gke:
    name: Deploy to GKE
    needs: [run-success-unit-tests, run-error-unit-tests, run-cache-unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Configure docker authentication
        run: gcloud auth configure-docker -q

      - name: Push docker image to GCR
        run: docker push asia.gcr.io/$PROJECT_ID/workfe-backend:$RELEASE_VERSION

      - name: Create config map
        run: kubectl create configmap $CONFIG_MAP_NAME \
             --from-literal=REDIS_IP=$REDIS_CLUSTER_IP \
             --from-literal=POSTGRESQL_IP=$POSTGRESQL_CLUSTER_IP \
             --from-literal=SQL_USER=$SQL_USER \
             --from-literal=SQL_PASSWORD=$SQL_PASSWORD \
             --from-literal=DATABASE_NAME=$DATABASE_NAME \
             --from-literal=POSTGRESQL_PORT_NUMBER=$POSTGRESQL_PORT_NUMBER \
             --from-literal=REDIS_PORT_NUMBER=$REDIS_PORT_NUMBER

      - name: Set image version
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          args: sed -i "s,URL_SHORTENER_IMAGE,asia.gcr.io/$PROJECT_ID/workfe-backend:$RELEASE_VERSION" backend.yaml

      - name: Deploy backend
        run: kubectl apply -f backend.yaml




